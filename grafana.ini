# -*- coding: utf-8 -*-
# MIA_IA_SYSTEM_v2_2025/grafana.ini
# Configuration de Grafana pour MIA_IA_SYSTEM_v2_2025
#
# Version: 2.1.5
# Date: 2025-05-14
#
# Rôle: Configure le serveur Grafana, les alertes, et la source de données Prometheus pour les dashboards.
#       Affiche les métriques de trading, position sizing, coûts, microstructure, HMM, drift,
#       performances RL, volatilité, et ensembles de politiques.
# Utilisé par: Grafana pour visualiser les métriques de l’application.
#
# Notes:
# - Conforme à structure.txt (version 2.1.5, 2025-05-14).
# - Supporte les suggestions 1 (position sizing), 2 (coûts), 3 (microstructure), 4 (HMM),
#   5 (profit factor), 6 (drift), 7 (Safe RL), 8 (Distributional RL), 9 (volatilité),
#   10 (ensembles de politiques).
# - Intègre avec prometheus.yml, helm/mia-system/, prometheus_metrics.py, alert_manager.py.
# - Pas de références à dxFeed, obs_t, 320 features, ou 81 features.
# - Policies Note: The official directory for routing policies is src/model/router/policies.
#   The src/model/policies directory is a residual and should be verified for removal to avoid import conflicts.

[server]
# Port HTTP pour l’interface Grafana
http_port = 3000

# Protocole (http ou https)
protocol = http

# Domaine (localhost par défaut)
domain = localhost

[auth]
# Désactiver l’inscription des utilisateurs
disable_signup = true

[auth.anonymous]
# Activer l’accès anonyme (pour tests, désactiver en production)
enabled = true
org_role = Viewer

[security]
# Mot de passe administrateur par défaut (à changer en production)
admin_user = admin
admin_password = admin

[alerting]
# Activer les alertes
enabled = true

# Configuration des alertes spécifiques
alert_sharpe_drift = enabled
alert_sharpe_drift_threshold = 0.5
alert_cvar_loss = enabled
alert_cvar_loss_threshold = 0.1

# Configuration du contact pour les alertes Telegram
[alerting.contact_points]
telegram:
  url = "https://api.telegram.org/bot<your-bot-token>/sendMessage"
  chat_id = "<your-chat-id>"

[datasources]
# Source de données Prometheus
prometheus.url = http://prometheus-server.monitoring.svc.cluster.local
prometheus.type = prometheus
prometheus.access = proxy
prometheus.is_default = true

[log]
# Niveau de journalisation
level = info

[metrics]
# Activer les métriques Grafana pour l’auto-monitoring
enabled = true

[dashboards]
# Dashboards existants
dashboard_trade_metrics = enabled  # Inclut trade_latency, profit_factor

# Dashboards pour les nouvelles métriques
dashboard_feature_metrics = enabled  # atr_dynamic, orderflow_imbalance, slippage_estimate, bid_ask_imbalance, trade_aggressiveness, iv_skew, iv_term_structure
dashboard_hmm_metrics = enabled  # regime_hmm, hmm_state_distribution
dashboard_rl_metrics = enabled  # cvar_loss, qr_dqn_quantiles
dashboard_policy_ensemble = enabled  # ensemble_weight_sac, ensemble_weight_ppo, ensemble_weight_ddpg